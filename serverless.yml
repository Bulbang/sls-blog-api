service: blog-api

frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221

  stage: dev
  region: us-east-1

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:Query
        - dynamodb:Scan
      Resource: !GetAtt DynamoDBTable.Arn

plugins:
  - serverless-webpack

functions:
  getArticles:
    handler: src/lambdas/getArticles/handler.getArticles
    events:
      - httpApi:
          method: get
          path: /articles
    environment:
      TABLE_NAME: ${self:custom.TableName}
      REGION: ${self:provider.region}
  getArticle:
    handler: src/lambdas/getArticle/handler.getArticle
    events:
      - httpApi:
          method: get
          path: /articles/{id}
    environment:
      TABLE_NAME: ${self:custom.TableName}
      REGION: ${self:provider.region}

custom:
  TableName: ${self:service}-${self:provider.stage}-table

resources:
  Resources:
    DynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.TableName}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
